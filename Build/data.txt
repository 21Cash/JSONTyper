{"id": "", "result": "0", "msg": "Unknown Error", "ref" : { "_id" : { "$oid" : "6434fca3da9da406c9ebc3ca"} , "course" : "619c8a88b47b1206501f10e2" , "topic" : "64159bd959e15106b41d214f" , "section" : "6415b91759e15106b41d4a7a" , "courseTag" : [ "assessment"] , "questionType" : "54883bea2036d78c5efedc3a" , "difficultyLevel" : "Very Easy" , "duration" : "200" , "pending" : [ ] , "previousAppearance" : [ ] , "restrictedCountries" : [ ] , "progLanguage" : "585d547b0cf2f069ef15319d" , "multiLanguageBoilerplate" : "no-boiler" , "displayText" : "C program to shrink an array by removing triplets that satisfy given constraints." , "hasNotes" : false , "hasDemo" : false , "answerReviewRequired" : false , "allowExecution" : true , "showConsole" : true , "isConsoleOnlyQuestion" : false , "isHadoop" : false , "allowMultipleFiles" : true , "doNotRunTestCases" : false , "usingTestCode" : true , "executionTimeoutSeconds" : 4000 , "executeUsingCmdArgs" : false , "enableQuestionIntro" : false , "isCSS" : false , "isJavaScript" : false , "isPreviewQIntro" : false , "compilationErrorQuestionTextInfo" : true , "isRichTextEditor" : true , "isPreview" : false , "questionText" : "<p>Given an integer array, shrink it by removing adjacent triplets that satisfy the given constraints and return the total number of elements in the resultant array.</p><p>A triplet will be of many forms but let’s consider here it as a sequence of consecutive three numbers</p><p><br></p><p><strong>Example-1:</strong></p><p><strong>Input:</strong> A[] = [1, 2, 3, 5, 7, 8], k = 2</p><p><strong>Expected Output: </strong>3</p><p><strong>Explanation: </strong>The adjacent triplet (3, 5, 7) can be removed from the array. The</p><p>resultant array is [1, 2, 8] cannot be reduced further.</p><p><br></p><p><strong>Example-2:</strong></p><p><strong>Input:</strong> A[] = [-1, 0, 1, 2, 3, 4], k = 1</p><p><strong>Expected Output: </strong>0</p><p><strong>Explanation: </strong>The result is 0 since we can remove all elements from the array.</p><p>First, the adjacent triplet (2, 3, 4) is removed. The array is now reduced to [-1, 0,</p><p>1], which forms another valid triplet and can be removed from the array.</p><p>Note that if the adjacent triplet (1, 2, 3) is removed from the array first, we cannot</p><p>reduce the resultant array [-1, 0, 4] further.</p>" , "isQuestionHintsRichTextEditor" : false , "isPreviewHints" : false , "correctContentMainFileName" : "triplet.c" , "weightageMode" : false , "quill" : true , "hints" : [ ] , "parentId" : "" , "filesContentArr" : [ { "fileName" : "triplet.c" , "fileContent" : "" , "correctContent" : "" , "readOnly" : false , "fileHidden" : false}] , "progLangExtraInfo" : "{\n\t\"globalVar\" : {\n\t\t\"CT_WORK_DIR\" : \"ct-c-work\",\n\t\t\"CT_SETUP_PATHS_FILE\" : \"$HOME/.c/setup-paths.sh\",\n\t\t\"CURRENT_EXERCISE_DIR\": \"introduction\",\n\t\t\"INPUT_FILES_REMOTE_PATH\": \"WINDOW_LOCATION_PROTOCOL/WINDOW_LOCATION_HOST/secure/lang/c/CURRENT_EXERCISE_DIR\",\n\t\t\"INPUT_FILE_NAMES\": [\"sample.txt\", \"sample.h\"],\n\t\t\"COMPARE_OUTPUT_FILE\" : true,\n\t\t\"OUTPUT_FILE_NAME\": \"sample.txt\",\n\t\t\"EXTRA_COMPILATION_OPTIONS\": \"\"\n\t},\n\t\"initCmdArr\" : [{\"cmd\" : \"cd $HOME \\r\", \"show\": false},\n\t\t\t\t\t{\"cmd\" : \"mkdir -p CT_WORK_DIR/CURRENT_EXERCISE_DIR\\r\", \"show\" : true, \"infoText\" : \"MKDIR_EXERCISE\"},\n\t\t\t\t\t{\"cmd\" : \"cd CT_WORK_DIR/CURRENT_EXERCISE_DIR\\r\", \"show\": false}]\n}" , "mainFileName" : "triplet.c" , "sOrder" : 18 , "questionHintsQuill" : false , "questionHints" :  null  , "varDef" : { } , "questionNo" : "332" , "hQT" : "5110edcf7b7def8b5a3cee89565a875e" , "hPLEI" : "825fddce8ed8d777a1531556de93d9df" , "hFCA" : "1660e94d3c46fb66130024df5deedbd0" , "hCERA" : "dd5ad2d2bf99696812856653311efac1" , "solution" : { "filesContentArr" : [ { "fileName" : "triplet.c" , "fileContent" : "#include<stdio.h>\nint main() {\n    \n    int arr[15],i,n,k;\n    printf(\"Enter the size of the array: \");\n    scanf(\"%d\",&n);\n    printf(\"Enter the elements of the array:\\n\");\n    for(i=0;i<n;i++)\n    scanf(\"%d\",&arr[i]);\n    printf(\"Enter the value of k: \");\n    scanf(\"%d\",&k);\n    int flagVal = -1;\n    while(1) {\n    \tint found = 0;\n    \tfor(i = 1; i < n-1; i++ ){\n    \t\tif(arr[i] != flagVal && arr[i] - arr[i-1] == k && arr[i+1] - arr[i] == k) {\n    \t\t\t\n    \t\t\tarr[i] = flagVal;\n    \t\t\tarr[i-1] = flagVal;\n    \t\t\tarr[i+1] = flagVal;\n    \t\t\tfound = 1;\n    \t\t}\n    \t}   \n    \tif(found == 0) {\n    \t\tbreak;\n    \t\t}\n        }\n        printf(\"Resultant Array: \");\n    \tint cnt = 0;\n        for(i = 0; i < n; i++) {\n    \t  if(arr[i] != flagVal) {\n    \t\t   printf(\"%d \", arr[i]);\n    \t\t      cnt++;\n\t\t}\n\t}\n    printf(\"\\n\");\n\tprintf(\"Total Elements: %d\\n\", cnt);\n}\n\t "}]} , "alreadyAnswered" : true , "hintsUsed" : 0 , "timeTaken" : 696 , "totalTimeSpent" : 691 , "memberNotesArr" : [ ] , "memberBookmarksMap" :  null  , "qbd" : "AMjc0X2N0X2No" , "cExecutionResultsArr" : [ { "cExecutionFlowArr" : [ { "programOutput" : "Enter the size of the array: " , "isProgramOutput" : true} , { "userInput" : "6" , "isUserInput" : true} , { "programOutput" : "Enter the elements of the array:" , "isProgramOutput" : true} , { "programOutput" : "" , "isProgramOutput" : true} , { "userInput" : "1 2 3 5 7 8" , "isUserInput" : true} , { "programOutput" : "Enter the value of k: " , "isProgramOutput" : true} , { "userInput" : "2" , "isUserInput" : true} , { "programOutput" : "Resultant Array: 1 2 8 " , "isProgramOutput" : true} , { "programOutput" : "" , "isProgramOutput" : true} , { "programOutput" : "Total Elements: 3" , "isProgramOutput" : true}] , "show" : true , "allowRandomOrder" : false , "mainFileName" : "triplet.c" , "partialMarksPec" : "20" , "cmdArgs" : [ ]} , { "cExecutionFlowArr" : [ { "programOutput" : "Enter the size of the array: " , "isProgramOutput" : true} , { "userInput" : "6" , "isUserInput" : true} , { "programOutput" : "Enter the elements of the array:" , "isProgramOutput" : true} , { "programOutput" : "" , "isProgramOutput" : true} , { "userInput" : "-1 0 1 2 3 4" , "isUserInput" : true} , { "programOutput" : "Enter the value of k: " , "isProgramOutput" : true} , { "userInput" : "1" , "isUserInput" : true} , { "programOutput" : "Resultant Array: " , "isProgramOutput" : true} , { "programOutput" : "" , "isProgramOutput" : true} , { "programOutput" : "Total Elements: 0" , "isProgramOutput" : true}] , "show" : true , "allowRandomOrder" : false , "mainFileName" : "triplet.c" , "partialMarksPec" : "20" , "cmdArgs" : [ ]}] , "multiLangTestCases" : [ ]}}